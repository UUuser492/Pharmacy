// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmacy;

#nullable disable

namespace Pharmacy.Migrations
{
    [DbContext(typeof(PharmacyContext))]
    [Migration("20221120203017_NoDelCasc")]
    partial class NoDelCasc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pharmacy.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("First_name");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Last_name");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 19,
                            Email = "AndOl@gmail.com",
                            Gender = true,
                            Phone = "+380993702050",
                            fName = "Andrew",
                            lName = "Oliynik"
                        },
                        new
                        {
                            Id = 2,
                            Age = 19,
                            Email = "OlOst@gmail.com",
                            Gender = true,
                            Phone = "+380993702051",
                            fName = "Oleksii",
                            lName = "Ostapchenko"
                        },
                        new
                        {
                            Id = 3,
                            Age = 19,
                            Email = "ArSh@gmail.com",
                            Gender = false,
                            Phone = "+380993702052",
                            fName = "Ariana",
                            lName = "Shamsha"
                        },
                        new
                        {
                            Id = 4,
                            Age = 19,
                            Email = "OlBil@gmail.com",
                            Gender = true,
                            Phone = "+380993702053",
                            fName = "Oleg",
                            lName = "Bilyk"
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Drug_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RecieptId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("RecieptId");

                    b.ToTable("Drugs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerId = 1,
                            Name = "Візин",
                            Price = 20m,
                            Type = "Краплі"
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerId = 2,
                            Name = "Синупрет",
                            Price = 75m,
                            Type = "Настоянка"
                        },
                        new
                        {
                            Id = 3,
                            ManufacturerId = 3,
                            Name = "Колдрекс",
                            Price = 40m,
                            Type = "Розчинний порошок"
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.DrugType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DrugType_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("DrugId")
                        .HasColumnType("int");

                    b.Property<int?>("Pharmacy_mId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.HasIndex("Pharmacy_mId");

                    b.ToTable("DrugTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            DrugId = 1,
                            PharmacymId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            DrugId = 2,
                            PharmacymId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 4,
                            DrugId = 3,
                            PharmacymId = 3
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Manufacturer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("License")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Balzaka, 15",
                            License = false,
                            Name = "Yassen"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Balzaka, 16",
                            License = false,
                            Name = "Bionorica"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Balzaka, 17",
                            License = false,
                            Name = "Coldrex"
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DrugId")
                        .HasColumnType("int");

                    b.Property<int?>("PharmacistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.HasIndex("PharmacistId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            Created = new DateTime(2022, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugId = 1,
                            PharmacistId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            Created = new DateTime(2022, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugId = 2,
                            PharmacistId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2,
                            Created = new DateTime(2022, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugId = 3,
                            PharmacistId = 3
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Pharmacist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Pharmacist_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("First_name");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Last_name");

                    b.HasKey("Id");

                    b.ToTable("Pharmacists", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            Email = "W1@gmail.com",
                            Gender = true,
                            Password = "123451",
                            Phone = "+380959873454",
                            fName = "Olexander",
                            lName = "Marchenko"
                        },
                        new
                        {
                            Id = 2,
                            Age = 23,
                            Email = "W2@gmail.com",
                            Gender = true,
                            Password = "123452",
                            Phone = "+380959873454",
                            fName = "Valerii",
                            lName = "Grozny"
                        },
                        new
                        {
                            Id = 3,
                            Age = 30,
                            Email = "W3@gmail.com",
                            Gender = true,
                            Password = "123453",
                            Phone = "+380959873454",
                            fName = "Olexiy",
                            lName = "Pavlenko"
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Pharmacy_m", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Pharmacy_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bandery, 4"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Bandery, 5"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Bandery, 6"
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Reciept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Reciept_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DrugId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DrugId");

                    b.ToTable("Reciepts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 3,
                            Created = new DateTime(2022, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            DrugId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            Created = new DateTime(2022, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            DrugId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1,
                            Created = new DateTime(2022, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            DrugId = 3
                        });
                });

            modelBuilder.Entity("Pharmacy.Models.Drug", b =>
                {
                    b.HasOne("Pharmacy.Models.Manufacturer", "Manufacturer")
                        .WithMany("Drugs")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Pharmacy.Models.Reciept", null)
                        .WithMany("Drugs")
                        .HasForeignKey("RecieptId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Pharmacy.Models.DrugType", b =>
                {
                    b.HasOne("Pharmacy.Models.Drug", "Drug")
                        .WithMany("DrugTypes")
                        .HasForeignKey("DrugId");

                    b.HasOne("Pharmacy.Models.Pharmacy_m", "Pharmacy")
                        .WithMany("DrugTypes")
                        .HasForeignKey("Pharmacy_mId");

                    b.Navigation("Drug");

                    b.Navigation("Pharmacy");
                });

            modelBuilder.Entity("Pharmacy.Models.Order", b =>
                {
                    b.HasOne("Pharmacy.Models.Drug", "Drug")
                        .WithMany("Orders")
                        .HasForeignKey("DrugId");

                    b.HasOne("Pharmacy.Models.Pharmacist", "Pharmacist")
                        .WithMany("Orders")
                        .HasForeignKey("PharmacistId");

                    b.Navigation("Drug");

                    b.Navigation("Pharmacist");
                });

            modelBuilder.Entity("Pharmacy.Models.Reciept", b =>
                {
                    b.HasOne("Pharmacy.Models.Customer", "Customer")
                        .WithMany("Reciepts")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Pharmacy.Models.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId");

                    b.Navigation("Customer");

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("Pharmacy.Models.Customer", b =>
                {
                    b.Navigation("Reciepts");
                });

            modelBuilder.Entity("Pharmacy.Models.Drug", b =>
                {
                    b.Navigation("DrugTypes");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Pharmacy.Models.Manufacturer", b =>
                {
                    b.Navigation("Drugs");
                });

            modelBuilder.Entity("Pharmacy.Models.Pharmacist", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Pharmacy.Models.Pharmacy_m", b =>
                {
                    b.Navigation("DrugTypes");
                });

            modelBuilder.Entity("Pharmacy.Models.Reciept", b =>
                {
                    b.Navigation("Drugs");
                });
#pragma warning restore 612, 618
        }
    }
}
